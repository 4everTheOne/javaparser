name: Trigger a Manual Release
on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version (no spaces, no `v` prefix) - example: `3.24.0`'
        required: true
        default: ''
      next_development_snapshot_version:
        description: 'Next development/snapshot version (no spaces, no `v` prefix, must have `-SNAPSHOT` suffix) - example: `3.24.1-SNAPSHOT'
        required: false
        default: '-SNAPSHOT'

jobs:
  validate_inputs:
    name: Validate inputs

    runs-on: ubuntu-latest
    steps:
      - name: Validate release version input is not empty
        run: |
          [[ "${{ github.event.inputs.release_version }}" != "" ]] || { echo "release_version input is empty" ; exit 10; }
      - name: Validate next development/snapshot version not empty
        run: |
          [[ "${{ github.event.inputs.next_development_snapshot_version }}" != "" ]] || { echo "next_development_snapshot_version input is empty" ; exit 20; }
      - name: Validate next development/snapshot version not default value
        run: |
          [[ "${{ github.event.inputs.next_development_snapshot_version }}"="-SNAPSHOT" ]] || { echo "next_development_snapshot_version input is the default value, must be specified" ; exit 21; }
      - name: Validate next development/snapshot version does have `-SNAPSHOT` suffix
        run: |
          [[ "${{ github.event.inputs.next_development_snapshot_version }}"="*-SNAPSHOT" ]] || { echo "next_development_snapshot_version input must end with `-SNAPSHOT`" ; exit 22; }
  

  verify_all_secrets_defined:
    name: Verify that all required secrets are defined
    runs-on: ubuntu-latest
    env:
      IS_DEFINED__MAVEN_OSSRH_USERNAME: ${{ secrets.MAVEN_OSSRH_USERNAME != null }}
      IS_DEFINED__MAVEN_OSSRH_PASSWORD: ${{ secrets.MAVEN_OSSRH_PASSWORD != null }}
      IS_DEFINED__MAVEN_GPG_PRIVATE_KEY: ${{ secrets.MAVEN_GPG_PRIVATE_KEY != null }}
      IS_DEFINED__MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE != null }}

    ## Exit/fail if any of the required secrets are not defined.
    steps:
      - run: |
          echo "IS_DEFINED__MAVEN_OSSRH_USERNAME: ${IS_DEFINED__MAVEN_OSSRH_USERNAME}";
          echo "IS_DEFINED__MAVEN_OSSRH_PASSWORD: ${IS_DEFINED__MAVEN_OSSRH_PASSWORD}";
          echo "IS_DEFINED__MAVEN_GPG_PRIVATE_KEY: ${IS_DEFINED__MAVEN_GPG_PRIVATE_KEY}";
          echo "IS_DEFINED__MAVEN_GPG_PASSPHRASE: ${IS_DEFINED__MAVEN_GPG_PASSPHRASE}";

      - name: Validate `MAVEN_OSSRH_USERNAME` is defined
        run: |
          if [ "${{env.IS_DEFINED__MAVEN_OSSRH_USERNAME}}" == 'false' ]; then
            echo "ERROR: Missing required secret MAVEN_OSSRH_USERNAME";
            exit 31;
          fi
      - name: Validate `MAVEN_OSSRH_PASSWORD` is defined
        run: |
          if [ "${{env.IS_DEFINED__MAVEN_OSSRH_PASSWORD}}" == 'false' ]; then
            echo "ERROR: Missing required secret MAVEN_OSSRH_PASSWORD";
            exit 32;
          fi
      - name: Validate `MAVEN_GPG_PRIVATE_KEY` is defined
        run: |
          if [ "${{env.IS_DEFINED__MAVEN_GPG_PRIVATE_KEY}}" == 'false' ]; then
            echo "ERROR: Missing required secret MAVEN_GPG_PRIVATE_KEY";
            exit 33;
          fi
      - name: Validate `MAVEN_GPG_PASSPHRASE` is defined
        run: |
          if [ "${{env.IS_DEFINED__MAVEN_GPG_PASSPHRASE}}" == 'false' ]; then
            echo "ERROR: Missing required secret MAVEN_GPG_PASSPHRASE";
            exit 34;
          fi



  prepare_and_perform_release:
    ## Only attempt this step if the validation steps have completed
    needs:
      - validate_inputs
      - verify_all_secrets_defined
    name: Prepare and perform a release to OSSRH
    runs-on: ubuntu-latest
    steps:

      ## Check out current repository
      - name: Fetch Sources
        uses: actions/checkout@v2.4.0

      ## Setup Java 11 environment for the next steps
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: zulu
          java-version: 11
          server-id: maven # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: ${{ secrets.MAVEN_OSSRH_USERNAME }}
          server-password: ${{ secrets.MAVEN_OSSRH_PASSWORD }}
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          gpg-passphrase: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

      ## TODO: Consider auto-patching the changelog here (currently must be done manually)

      ## Prepare a release using the given release and next development/snapshot release versions
      - name: Prepare Release
        shell: bash
        run: ./run_release_prepare_non-interactive.sh "${{ github.event.inputs.release_version }}" "${{ github.event.inputs.next_development_snapshot_version }}"

      ## TODO: Git push after release:prepare (currently defaults to not push)


      ## Perform the release (i.e., submit it to OSSRH)
      - name: Prepare Release (**requires** release:prepare in previous step)
        shell: bash
        run: ./run_release_perform.sh



## Note that separate action exists which is triggered by pushing a
## tag name matching the release pattern, therefore is not required here

## TODO: Consider triggering a notifications here
